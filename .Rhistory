library('GEOquery')
dir.create('geodata')
tnbc.gene.set <- getGEO(params$geo.dataset, destdir="geodata")[[1]]
case.row.nums <- which(pData(tnbc.gene.set)$source_name_ch1 == 'breast_TNBC')
case.ids <- pData(tnbc.gene.set)$geo_accession[case.row.nums]
control.row.nums <- which(pData(tnbc.gene.set)$source_name_ch1 == 'breast_normal tissue')
control.ids <- pData(tnbc.gene.set)$geo_accession[control.row.nums]
require('limma')
exprs(tnbc.gene.set) <- normalizeBetweenArrays(exprs(tnbc.gene.set))
require('genefilter')
# also download the annotation package for this microarray platform
require('hta20transcriptcluster.db')
# assign correct annotation package name to this GSE
annotation(tnbc.gene.set) <- 'hta20transcriptcluster.db'
#perform filtering to retain probes with highest IQR
tnbc.gene.set <- featureFilter(tnbc.gene.set)
packrat::snapshot()
?featureFilter
class(tnbc.gene.set)
featureFilter(tnbc.gene.set)
?featureFilter
?featureFilter
install.packages('devtools)
)))
''
'
install.packages('devtools')
devtools::install_version('genefilter', version = '1.57.0')
devtools::install_version('genefilter')
library('GEOquery')
dir.create('geodata')
tnbc.gene.set <- getGEO(params$geo.dataset, destdir="geodata")[[1]]
case.row.nums <- which(pData(tnbc.gene.set)$source_name_ch1 == 'breast_TNBC')
case.ids <- pData(tnbc.gene.set)$geo_accession[case.row.nums]
control.row.nums <- which(pData(tnbc.gene.set)$source_name_ch1 == 'breast_normal tissue')
control.ids <- pData(tnbc.gene.set)$geo_accession[control.row.nums]
require('limma')
exprs(tnbc.gene.set) <- normalizeBetweenArrays(exprs(tnbc.gene.set))
require('genefilter')
# also download the annotation package for this microarray platform
require('hta20transcriptcluster.db')
# assign correct annotation package name to this GSE
annotation(tnbc.gene.set) <- 'hta20transcriptcluster.db'
#perform filtering to retain probes with highest IQR
tnbc.gene.set <- featureFilter(tnbc.gene.set)
library('GEOquery')
dir.create('geodata')
tnbc.gene.set <- getGEO(params$geo.dataset, destdir="geodata")[[1]]
case.row.nums <- which(pData(tnbc.gene.set)$source_name_ch1 == 'breast_TNBC')
case.ids <- pData(tnbc.gene.set)$geo_accession[case.row.nums]
control.row.nums <- which(pData(tnbc.gene.set)$source_name_ch1 == 'breast_normal tissue')
control.ids <- pData(tnbc.gene.set)$geo_accession[control.row.nums]
require('limma')
exprs(tnbc.gene.set) <- normalizeBetweenArrays(exprs(tnbc.gene.set))
require('genefilter')
# also download the annotation package for this microarray platform
require('hta20transcriptcluster.db')
# assign correct annotation package name to this GSE
annotation(tnbc.gene.set) <- 'hta20transcriptcluster.db'
#perform filtering to retain probes with highest IQR
tnbc.gene.set <- featureFilter(tnbc.gene.set)
?featureFilter
nsFilter(featureFilter)
genefilter::nsFilter(featureFilter)
nsFilter
nsFilter(tnbc.gene.set)
?featureData
featureData(tnbc.gene.set)
?featureFilter
?featureFilter
?featureFilter
genefilter::featureFilter
?genefilter::featureFilter
tnbc.gene.set <- genefilter::featureFilter(tnbc.gene.set)
require('genefilter')
tnbc.gene.set <- genefilter::featureFilter(tnbc.gene.set)
annotation(tnbc.gene.set) <- 'hta20transcriptcluster.db'
tnbc.gene.set <- genefilter::featureFilter(tnbc.gene.set)
?genefilter::featureFilter
?genefilter::nsFilter
